{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Gestion_activos\\\\frontend\\\\src\\\\components\\\\AsignarUsuarioActivoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Select from 'react-select';\nimport api from '../services/api';\nimport '../css/ActivoFijoForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AsignarUsuarioActivoForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [usuario_correo, setUsuarioCorreo] = useState('');\n  const [contraseña, setContraseña] = useState('');\n  const [tipo_conexion, setTipoConexion] = useState('');\n  const [ip, setIp] = useState('');\n  const [puerto, setPuerto] = useState('');\n  const [usuario_responsable, setUsuarioResponsable] = useState('');\n  const [ubicacion_id, setUbicacionId] = useState('');\n  const [ubicaciones, setUbicaciones] = useState([]);\n  const [company_cliente_id, setCompanyClienteId] = useState('');\n  const [camposVisibles, setCamposVisibles] = useState([]);\n  const [usuariosResponsables, setUsuariosResponsables] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [ubicacionesResponse, activosResponse] = await Promise.all([api.get('/ubicaciones'), api.get('/activos-fijos')]);\n        setUbicaciones(ubicacionesResponse.data);\n\n        // Obtener usuarios responsables de los activos\n        const usuariosResponsablesData = activosResponse.data.map(activo => ({\n          value: activo.usuario_responsable,\n          label: activo.usuario_responsable\n        }));\n        setUsuariosResponsables(usuariosResponsablesData);\n        if (id) {\n          const response = await api.get(`/activos-fijos/${id}`);\n          const data = response.data;\n          setUsuarioCorreo(data.usuario_correo);\n          setContraseña(data.contraseña);\n          setTipoConexion(data.tipo_conexion);\n          setIp(data.ip);\n          setPuerto(data.puerto);\n          setUsuarioResponsable(data.usuario_responsable);\n          setUbicacionId(data.ubicacion_id);\n          setCompanyClienteId(data.company_cliente_id);\n\n          // Obtener campos visibles con join a tabla campos\n          const camposResponse = await api.get(`/campos-activos-fijos/tipo/${data.tipo_activo_fijo_id}`);\n          const camposMap = {};\n          const allCamposResponse = await api.get('/campos');\n          allCamposResponse.data.forEach(campo => {\n            camposMap[campo.id] = campo.nombre;\n          });\n\n          // Mapear campo_id a nombres de campos\n          const camposVisiblesNombres = camposResponse.data.filter(campo => campo.visible).map(campo => camposMap[campo.campo_id]);\n          setCamposVisibles(camposVisiblesNombres);\n        }\n      } catch (error) {\n        console.error('Error al obtener datos:', error);\n        alert('Error al obtener datos.');\n      }\n    };\n    fetchData();\n  }, [id]);\n  useEffect(() => {\n    const fetchUbicaciones = async () => {\n      if (company_cliente_id) {\n        try {\n          const response = await api.get(`/ubicaciones`);\n          // Filtrar ubicaciones por compañía\n          const ubicacionesFiltradas = response.data.filter(ubicacion => ubicacion.company_cliente_id === parseInt(company_cliente_id));\n          setUbicaciones(ubicacionesFiltradas);\n          // Limpiar ubicación seleccionada si no está en las ubicaciones filtradas\n          if (!ubicacionesFiltradas.find(u => u.id === parseInt(ubicacion_id))) {\n            setUbicacionId('');\n          }\n        } catch (error) {\n          console.error('Error al obtener ubicaciones:', error);\n          alert('Error al obtener ubicaciones.');\n        }\n      } else {\n        // Si no hay compañía seleccionada, limpiar ubicaciones\n        setUbicaciones([]);\n        setUbicacionId('');\n      }\n    };\n    fetchUbicaciones();\n  }, [company_cliente_id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const data = {\n        usuario_correo,\n        contraseña,\n        tipo_conexion,\n        ip,\n        puerto,\n        usuario_responsable,\n        ubicacion_id\n      };\n      if (id) {\n        await api.put(`/activos-fijos/${id}`, data);\n      } else {\n        await api.post('/activos-fijos', data);\n      }\n      alert('Activo fijo guardado con éxito.');\n      navigate('/activos-fijos');\n    } catch (error) {\n      console.error('Error al guardar activo fijo:', error);\n      alert('Error al guardar activo fijo.');\n    }\n  };\n  const handleCreateUser = () => {\n    navigate('/users/new');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: id ? 'Editar Activo Fijo' : 'Crear Activo Fijo'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [camposVisibles.includes('usuario_correo') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"usuario_correo\",\n          children: \"Usuario Correo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"usuario_correo\",\n          className: \"form-control\",\n          value: usuario_correo,\n          onChange: e => setUsuarioCorreo(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), camposVisibles.includes('contraseña') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contrase\\xF1a\",\n          children: \"Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"contrase\\xF1a\",\n          className: \"form-control\",\n          value: contraseña,\n          onChange: e => setContraseña(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), camposVisibles.includes('tipo_conexion') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tipo_conexion\",\n          children: \"Tipo de Conexi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"tipo_conexion\",\n          className: \"form-control\",\n          value: tipo_conexion,\n          onChange: e => setTipoConexion(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), camposVisibles.includes('ip') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ip\",\n          children: \"IP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ip\",\n          className: \"form-control\",\n          value: ip,\n          onChange: e => setIp(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), camposVisibles.includes('puerto') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"puerto\",\n          children: \"Puerto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"puerto\",\n          className: \"form-control\",\n          value: puerto,\n          onChange: e => setPuerto(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"usuario_responsable\",\n          children: \"Usuario Responsable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"usuario_responsable\",\n          options: usuariosResponsables,\n          value: usuariosResponsables.find(user => user.value === usuario_responsable),\n          onChange: selectedOption => setUsuarioResponsable(selectedOption.value),\n          isClearable: true,\n          placeholder: \"Seleccione un usuario...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-link\",\n          onClick: handleCreateUser,\n          children: \"Crear nuevo usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ubicacion_id\",\n          children: \"Ubicaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"ubicacion_id\",\n          className: \"form-control\",\n          value: ubicacion_id,\n          onChange: e => setUbicacionId(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccione una ubicaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), ubicaciones.map(ubicacion => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: ubicacion.id,\n            children: ubicacion.nombre\n          }, ubicacion.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-3\",\n        children: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(AsignarUsuarioActivoForm, \"J8P4g8tbNiPaZ2gktY8BJmWKHf4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AsignarUsuarioActivoForm;\nexport default AsignarUsuarioActivoForm;\nvar _c;\n$RefreshReg$(_c, \"AsignarUsuarioActivoForm\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Select","api","jsxDEV","_jsxDEV","AsignarUsuarioActivoForm","_s","id","navigate","usuario_correo","setUsuarioCorreo","contraseña","setContraseña","tipo_conexion","setTipoConexion","ip","setIp","puerto","setPuerto","usuario_responsable","setUsuarioResponsable","ubicacion_id","setUbicacionId","ubicaciones","setUbicaciones","company_cliente_id","setCompanyClienteId","camposVisibles","setCamposVisibles","usuariosResponsables","setUsuariosResponsables","fetchData","ubicacionesResponse","activosResponse","Promise","all","get","data","usuariosResponsablesData","map","activo","value","label","response","camposResponse","tipo_activo_fijo_id","camposMap","allCamposResponse","forEach","campo","nombre","camposVisiblesNombres","filter","visible","campo_id","error","console","alert","fetchUbicaciones","ubicacionesFiltradas","ubicacion","parseInt","find","u","handleSubmit","e","preventDefault","put","post","handleCreateUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","includes","htmlFor","type","onChange","target","required","options","user","selectedOption","isClearable","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Gestion_activos/frontend/src/components/AsignarUsuarioActivoForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport api from '../services/api';\r\nimport '../css/ActivoFijoForm.css';\r\n\r\nconst AsignarUsuarioActivoForm = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [usuario_correo, setUsuarioCorreo] = useState('');\r\n  const [contraseña, setContraseña] = useState('');\r\n  const [tipo_conexion, setTipoConexion] = useState('');\r\n  const [ip, setIp] = useState('');\r\n  const [puerto, setPuerto] = useState('');\r\n  const [usuario_responsable, setUsuarioResponsable] = useState('');\r\n  const [ubicacion_id, setUbicacionId] = useState('');\r\n  const [ubicaciones, setUbicaciones] = useState([]);\r\n  const [company_cliente_id, setCompanyClienteId] = useState('');\r\n  const [camposVisibles, setCamposVisibles] = useState([]);\r\n  const [usuariosResponsables, setUsuariosResponsables] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [ubicacionesResponse, activosResponse] = await Promise.all([\r\n          api.get('/ubicaciones'),\r\n          api.get('/activos-fijos')\r\n        ]);\r\n\r\n        setUbicaciones(ubicacionesResponse.data);\r\n\r\n        // Obtener usuarios responsables de los activos\r\n        const usuariosResponsablesData = activosResponse.data.map(activo => ({\r\n          value: activo.usuario_responsable,\r\n          label: activo.usuario_responsable\r\n        }));\r\n        setUsuariosResponsables(usuariosResponsablesData);\r\n\r\n        if (id) {\r\n          const response = await api.get(`/activos-fijos/${id}`);\r\n          const data = response.data;\r\n          setUsuarioCorreo(data.usuario_correo);\r\n          setContraseña(data.contraseña);\r\n          setTipoConexion(data.tipo_conexion);\r\n          setIp(data.ip);\r\n          setPuerto(data.puerto);\r\n          setUsuarioResponsable(data.usuario_responsable);\r\n          setUbicacionId(data.ubicacion_id);\r\n          setCompanyClienteId(data.company_cliente_id);\r\n\r\n          // Obtener campos visibles con join a tabla campos\r\n          const camposResponse = await api.get(`/campos-activos-fijos/tipo/${data.tipo_activo_fijo_id}`);\r\n          const camposMap = {};\r\n          const allCamposResponse = await api.get('/campos');\r\n          allCamposResponse.data.forEach(campo => {\r\n            camposMap[campo.id] = campo.nombre;\r\n          });\r\n\r\n          // Mapear campo_id a nombres de campos\r\n          const camposVisiblesNombres = camposResponse.data\r\n            .filter(campo => campo.visible)\r\n            .map(campo => camposMap[campo.campo_id]);\r\n\r\n          setCamposVisibles(camposVisiblesNombres);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener datos:', error);\r\n        alert('Error al obtener datos.');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const fetchUbicaciones = async () => {\r\n      if (company_cliente_id) {\r\n        try {\r\n          const response = await api.get(`/ubicaciones`);\r\n          // Filtrar ubicaciones por compañía\r\n          const ubicacionesFiltradas = response.data.filter(\r\n            ubicacion => ubicacion.company_cliente_id === parseInt(company_cliente_id)\r\n          );\r\n          setUbicaciones(ubicacionesFiltradas);\r\n          // Limpiar ubicación seleccionada si no está en las ubicaciones filtradas\r\n          if (!ubicacionesFiltradas.find(u => u.id === parseInt(ubicacion_id))) {\r\n            setUbicacionId('');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error al obtener ubicaciones:', error);\r\n          alert('Error al obtener ubicaciones.');\r\n        }\r\n      } else {\r\n        // Si no hay compañía seleccionada, limpiar ubicaciones\r\n        setUbicaciones([]);\r\n        setUbicacionId('');\r\n      }\r\n    };\r\n\r\n    fetchUbicaciones();\r\n  }, [company_cliente_id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const data = {\r\n        usuario_correo,\r\n        contraseña,\r\n        tipo_conexion,\r\n        ip,\r\n        puerto,\r\n        usuario_responsable,\r\n        ubicacion_id\r\n      };\r\n\r\n      if (id) {\r\n        await api.put(`/activos-fijos/${id}`, data);\r\n      } else {\r\n        await api.post('/activos-fijos', data);\r\n      }\r\n\r\n      alert('Activo fijo guardado con éxito.');\r\n      navigate('/activos-fijos');\r\n    } catch (error) {\r\n      console.error('Error al guardar activo fijo:', error);\r\n      alert('Error al guardar activo fijo.');\r\n    }\r\n  };\r\n\r\n  const handleCreateUser = () => {\r\n    navigate('/users/new');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>{id ? 'Editar Activo Fijo' : 'Crear Activo Fijo'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {camposVisibles.includes('usuario_correo') && (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"usuario_correo\">Usuario Correo</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"usuario_correo\"\r\n              className=\"form-control\"\r\n              value={usuario_correo}\r\n              onChange={(e) => setUsuarioCorreo(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        )}\r\n        {camposVisibles.includes('contraseña') && (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"contraseña\">Contraseña</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"contraseña\"\r\n              className=\"form-control\"\r\n              value={contraseña}\r\n              onChange={(e) => setContraseña(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        )}\r\n        {camposVisibles.includes('tipo_conexion') && (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"tipo_conexion\">Tipo de Conexión</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"tipo_conexion\"\r\n              className=\"form-control\"\r\n              value={tipo_conexion}\r\n              onChange={(e) => setTipoConexion(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        )}\r\n        {camposVisibles.includes('ip') && (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"ip\">IP</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"ip\"\r\n              className=\"form-control\"\r\n              value={ip}\r\n              onChange={(e) => setIp(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        )}\r\n        {camposVisibles.includes('puerto') && (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"puerto\">Puerto</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"puerto\"\r\n              className=\"form-control\"\r\n              value={puerto}\r\n              onChange={(e) => setPuerto(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"usuario_responsable\">Usuario Responsable</label>\r\n          <Select\r\n            id=\"usuario_responsable\"\r\n            options={usuariosResponsables}\r\n            value={usuariosResponsables.find(user => user.value === usuario_responsable)}\r\n            onChange={(selectedOption) => setUsuarioResponsable(selectedOption.value)}\r\n            isClearable\r\n            placeholder=\"Seleccione un usuario...\"\r\n          />\r\n          <button type=\"button\" className=\"btn btn-link\" onClick={handleCreateUser}>\r\n            Crear nuevo usuario\r\n          </button>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"ubicacion_id\">Ubicación</label>\r\n          <select\r\n            id=\"ubicacion_id\"\r\n            className=\"form-control\"\r\n            value={ubicacion_id}\r\n            onChange={(e) => setUbicacionId(e.target.value)}\r\n            required\r\n          >\r\n            <option value=\"\">Seleccione una ubicación</option>\r\n            {ubicaciones.map(ubicacion => (\r\n              <option key={ubicacion.id} value={ubicacion.id}>{ubicacion.nombre}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n          Guardar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AsignarUsuarioActivoForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}