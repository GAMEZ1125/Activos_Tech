{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Gestion_activos\\\\frontend\\\\src\\\\components\\\\CompanyClienteForm.js\",\n  _s = $RefreshSig$();\n// src/components/CompanyClienteForm.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyClienteForm = () => {\n  _s();\n  const [nombre, setNombre] = useState('');\n  const [correo_electronico, setCorreoElectronico] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n\n  // Cargar datos del company cliente si estamos en modo edición\n  useEffect(() => {\n    if (id) {\n      const fetchCompanyCliente = async () => {\n        try {\n          const response = await api.get(`/company-clientes/${id}`);\n          const {\n            nombre,\n            correo_electronico\n          } = response.data;\n          setNombre(nombre);\n          setCorreoElectronico(correo_electronico);\n          setIsEditMode(true);\n        } catch (error) {\n          console.error('Error al cargar company cliente:', error);\n          alert('Error al cargar el company cliente.');\n        }\n      };\n      fetchCompanyCliente();\n    }\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validaciones básicas\n    if (!nombre.trim() || !correo_electronico.trim()) {\n      alert('Por favor, complete todos los campos');\n      return;\n    }\n\n    // Validación de formato de correo electrónico\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(correo_electronico)) {\n      alert('Por favor, ingrese un correo electrónico válido');\n      return;\n    }\n    const companyClienteData = {\n      nombre: nombre.trim(),\n      correo_electronico: correo_electronico.trim()\n    };\n    try {\n      if (isEditMode) {\n        // Actualizar company cliente existente\n        const response = await api.put(`/company-clientes/${id}`, companyClienteData);\n        console.log('Respuesta de actualización:', response);\n        alert('Company cliente actualizado con éxito.');\n      } else {\n        // Crear nuevo company cliente\n        const response = await api.post('/company-clientes', companyClienteData);\n        console.log('Respuesta de creación:', response);\n        alert('Company cliente creado con éxito.');\n      }\n      navigate('/company-clientes'); // Redirigir al dashboard de company clientes\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error detallado al guardar company cliente:', error.response || error);\n\n      // Mensaje de error más descriptivo\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Error desconocido al guardar el company cliente';\n      alert(`Error: ${errorMessage}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isEditMode ? 'Editar Company Cliente' : 'Crear Nuevo Company Cliente'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: nombre,\n          onChange: e => setNombre(e.target.value),\n          required: true,\n          minLength: 2,\n          maxLength: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Correo Electr\\xF3nico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          value: correo_electronico,\n          onChange: e => setCorreoElectronico(e.target.value),\n          required: true,\n          pattern: \"[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: isEditMode ? 'Actualizar Company Cliente' : 'Crear Company Cliente'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary ms-2\",\n        onClick: () => navigate('/company-clientes'),\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyClienteForm, \"X2yJGjFE0VlySLstHyQShzyyG6I=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CompanyClienteForm;\nexport default CompanyClienteForm;\nvar _c;\n$RefreshReg$(_c, \"CompanyClienteForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","api","jsxDEV","_jsxDEV","CompanyClienteForm","_s","nombre","setNombre","correo_electronico","setCorreoElectronico","isEditMode","setIsEditMode","navigate","id","fetchCompanyCliente","response","get","data","error","console","alert","handleSubmit","e","preventDefault","trim","emailRegex","test","companyClienteData","put","log","post","_error$response","_error$response$data","errorMessage","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","minLength","maxLength","pattern","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Gestion_activos/frontend/src/components/CompanyClienteForm.js"],"sourcesContent":["// src/components/CompanyClienteForm.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport api from '../services/api';\r\n\r\nconst CompanyClienteForm = () => {\r\n  const [nombre, setNombre] = useState('');\r\n  const [correo_electronico, setCorreoElectronico] = useState('');\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  // Cargar datos del company cliente si estamos en modo edición\r\n  useEffect(() => {\r\n    if (id) {\r\n      const fetchCompanyCliente = async () => {\r\n        try {\r\n          const response = await api.get(`/company-clientes/${id}`);\r\n          const { nombre, correo_electronico } = response.data;\r\n          setNombre(nombre);\r\n          setCorreoElectronico(correo_electronico);\r\n          setIsEditMode(true);\r\n        } catch (error) {\r\n          console.error('Error al cargar company cliente:', error);\r\n          alert('Error al cargar el company cliente.');\r\n        }\r\n      };\r\n      fetchCompanyCliente();\r\n    }\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validaciones básicas\r\n    if (!nombre.trim() || !correo_electronico.trim()) {\r\n      alert('Por favor, complete todos los campos');\r\n      return;\r\n    }\r\n\r\n    // Validación de formato de correo electrónico\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(correo_electronico)) {\r\n      alert('Por favor, ingrese un correo electrónico válido');\r\n      return;\r\n    }\r\n\r\n    const companyClienteData = { \r\n      nombre: nombre.trim(), \r\n      correo_electronico: correo_electronico.trim() \r\n    };\r\n\r\n    try {\r\n      if (isEditMode) {\r\n        // Actualizar company cliente existente\r\n        const response = await api.put(`/company-clientes/${id}`, companyClienteData);\r\n        console.log('Respuesta de actualización:', response);\r\n        alert('Company cliente actualizado con éxito.');\r\n      } else {\r\n        // Crear nuevo company cliente\r\n        const response = await api.post('/company-clientes', companyClienteData);\r\n        console.log('Respuesta de creación:', response);\r\n        alert('Company cliente creado con éxito.');\r\n      }\r\n      navigate('/company-clientes'); // Redirigir al dashboard de company clientes\r\n    } catch (error) {\r\n      console.error('Error detallado al guardar company cliente:', error.response || error);\r\n      \r\n      // Mensaje de error más descriptivo\r\n      const errorMessage = error.response?.data?.message || \r\n                           error.message || \r\n                           'Error desconocido al guardar el company cliente';\r\n      \r\n      alert(`Error: ${errorMessage}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>{isEditMode ? 'Editar Company Cliente' : 'Crear Nuevo Company Cliente'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Nombre</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={nombre}\r\n            onChange={(e) => setNombre(e.target.value)}\r\n            required\r\n            minLength={2}\r\n            maxLength={100}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Correo Electrónico</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            value={correo_electronico}\r\n            onChange={(e) => setCorreoElectronico(e.target.value)}\r\n            required\r\n            pattern=\"[^\\s@]+@[^\\s@]+\\.[^\\s@]+\"\r\n          />\r\n        </div>\r\n\r\n        <button \r\n          type=\"submit\" \r\n          className=\"btn btn-primary\"\r\n        >\r\n          {isEditMode ? 'Actualizar Company Cliente' : 'Crear Company Cliente'}\r\n        </button>\r\n        \r\n        <button \r\n          type=\"button\" \r\n          className=\"btn btn-secondary ms-2\"\r\n          onClick={() => navigate('/company-clientes')}\r\n        >\r\n          Cancelar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyClienteForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}