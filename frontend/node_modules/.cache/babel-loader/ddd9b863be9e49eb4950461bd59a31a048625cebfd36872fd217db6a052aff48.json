{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Gestion_activos\\\\frontend\\\\src\\\\components\\\\CampoActivoFijoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport '../css/CampoActivoFijoForm.css'; // Importa el archivo CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampoActivoFijoForm = () => {\n  _s();\n  const {\n    tipo_activo_fijo_id\n  } = useParams();\n  const [campos, setCampos] = useState([]);\n  const [selectedCampos, setSelectedCampos] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchCampos = async () => {\n      try {\n        const response = await api.get('/campos');\n        setCampos(response.data);\n      } catch (error) {\n        console.error('Error al obtener campos:', error);\n        alert('Error al obtener los campos.');\n      }\n    };\n    const fetchSelectedCampos = async () => {\n      try {\n        const response = await api.get(`/campos-activos-fijos/tipo/${tipo_activo_fijo_id}`);\n        const selected = response.data.map(campo => campo.campo_id);\n        setSelectedCampos(selected);\n        // Actualiza los campos con la propiedad visible\n        setCampos(prevCampos => prevCampos.map(campo => {\n          var _response$data$find;\n          return {\n            ...campo,\n            visible: ((_response$data$find = response.data.find(selectedCampo => selectedCampo.campo_id === campo.id)) === null || _response$data$find === void 0 ? void 0 : _response$data$find.visible) || false\n          };\n        }));\n      } catch (error) {\n        console.error('Error al obtener campos seleccionados:', error);\n        alert('Error al obtener los campos seleccionados.');\n      }\n    };\n    fetchCampos();\n    fetchSelectedCampos();\n  }, [tipo_activo_fijo_id]);\n  useEffect(() => {\n    // Selecciona automáticamente los campos obligatorios\n    setSelectedCampos(prevSelectedCampos => [...prevSelectedCampos, ...campos.filter(campo => campo.obligatorio).map(campo => campo.id)]);\n  }, [campos]);\n  const handleCampoChange = campoId => {\n    setSelectedCampos(prevSelectedCampos => prevSelectedCampos.includes(campoId) ? prevSelectedCampos.filter(id => id !== campoId) : [...prevSelectedCampos, campoId]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await api.put(`/campos-activos-fijos/tipo/${tipo_activo_fijo_id}`, {\n        campos: campos.map(campo => ({\n          campo_id: campo.id,\n          visible: selectedCampos.includes(campo.id)\n        }))\n      });\n      alert('Campos actualizados con éxito.');\n      navigate('/tipos-activos-fijos');\n    } catch (error) {\n      console.error('Error al actualizar campos:', error);\n      alert('Error al actualizar los campos.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Asignar Campos para Tipo de Activo Fijo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [campos.map(campo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: `form-check-input ${campo.visible ? 'visible-true' : ''}`,\n          id: `campo-${campo.id}`,\n          checked: selectedCampos.includes(campo.id),\n          onChange: () => handleCampoChange(campo.id),\n          disabled: campo.obligatorio // Deshabilita el checkbox si el campo es obligatorio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: `campo-${campo.id}`,\n          children: campo.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, campo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-3\",\n        children: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(CampoActivoFijoForm, \"v+xHcXUUmc76+zmYNZ2oBedFS2s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CampoActivoFijoForm;\nexport default CampoActivoFijoForm;\nvar _c;\n$RefreshReg$(_c, \"CampoActivoFijoForm\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","api","jsxDEV","_jsxDEV","CampoActivoFijoForm","_s","tipo_activo_fijo_id","campos","setCampos","selectedCampos","setSelectedCampos","navigate","fetchCampos","response","get","data","error","console","alert","fetchSelectedCampos","selected","map","campo","campo_id","prevCampos","_response$data$find","visible","find","selectedCampo","id","prevSelectedCampos","filter","obligatorio","handleCampoChange","campoId","includes","handleSubmit","e","preventDefault","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","checked","onChange","disabled","htmlFor","nombre","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Gestion_activos/frontend/src/components/CampoActivoFijoForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport '../css/CampoActivoFijoForm.css'; // Importa el archivo CSS\r\n\r\nconst CampoActivoFijoForm = () => {\r\n  const { tipo_activo_fijo_id } = useParams();\r\n  const [campos, setCampos] = useState([]);\r\n  const [selectedCampos, setSelectedCampos] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchCampos = async () => {\r\n      try {\r\n        const response = await api.get('/campos');\r\n        setCampos(response.data);\r\n      } catch (error) {\r\n        console.error('Error al obtener campos:', error);\r\n        alert('Error al obtener los campos.');\r\n      }\r\n    };\r\n\r\n    const fetchSelectedCampos = async () => {\r\n      try {\r\n        const response = await api.get(`/campos-activos-fijos/tipo/${tipo_activo_fijo_id}`);\r\n        const selected = response.data.map(campo => campo.campo_id);\r\n        setSelectedCampos(selected);\r\n        // Actualiza los campos con la propiedad visible\r\n        setCampos(prevCampos => prevCampos.map(campo => ({\r\n          ...campo,\r\n          visible: response.data.find(selectedCampo => selectedCampo.campo_id === campo.id)?.visible || false\r\n        })));\r\n      } catch (error) {\r\n        console.error('Error al obtener campos seleccionados:', error);\r\n        alert('Error al obtener los campos seleccionados.');\r\n      }\r\n    };\r\n\r\n    fetchCampos();\r\n    fetchSelectedCampos();\r\n  }, [tipo_activo_fijo_id]);\r\n\r\n  useEffect(() => {\r\n    // Selecciona automáticamente los campos obligatorios\r\n    setSelectedCampos(prevSelectedCampos => [\r\n      ...prevSelectedCampos,\r\n      ...campos.filter(campo => campo.obligatorio).map(campo => campo.id)\r\n    ]);\r\n  }, [campos]);\r\n\r\n  const handleCampoChange = (campoId) => {\r\n    setSelectedCampos(prevSelectedCampos =>\r\n      prevSelectedCampos.includes(campoId)\r\n        ? prevSelectedCampos.filter(id => id !== campoId)\r\n        : [...prevSelectedCampos, campoId]\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await api.put(`/campos-activos-fijos/tipo/${tipo_activo_fijo_id}`, {\r\n        campos: campos.map(campo => ({\r\n          campo_id: campo.id,\r\n          visible: selectedCampos.includes(campo.id)\r\n        }))\r\n      });\r\n      alert('Campos actualizados con éxito.');\r\n      navigate('/tipos-activos-fijos');\r\n    } catch (error) {\r\n      console.error('Error al actualizar campos:', error);\r\n      alert('Error al actualizar los campos.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Asignar Campos para Tipo de Activo Fijo</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {campos.map(campo => (\r\n          <div key={campo.id} className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className={`form-check-input ${campo.visible ? 'visible-true' : ''}`}\r\n              id={`campo-${campo.id}`}\r\n              checked={selectedCampos.includes(campo.id)}\r\n              onChange={() => handleCampoChange(campo.id)}\r\n              disabled={campo.obligatorio} // Deshabilita el checkbox si el campo es obligatorio\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={`campo-${campo.id}`}>\r\n              {campo.nombre}\r\n            </label>\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n          Guardar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CampoActivoFijoForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}